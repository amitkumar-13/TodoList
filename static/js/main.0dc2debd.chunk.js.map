{"version":3,"sources":["contexts/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTask","title","id","uuid","removeTask","filter","task","clearList","findItem","item","find","editTask","newTasks","map","console","log","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc2debd.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n// import uuid from 'uuid'\nimport {v1 as uuid} from \"uuid\"; \n\nexport const TaskListContext = createContext()\n\nconst TaskListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || []\n\n  const [tasks, setTasks] = useState(initialState)\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks))\n  }, [tasks])\n\n  const [editItem, setEditItem] = useState(null)\n\n  // Add tasks\n  const addTask = title => {\n    setTasks([...tasks, { title, id: uuid() }])\n  }\n\n  // Remove tasks\n  const removeTask = id => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n\n  // Clear tasks\n  const clearList = () => {\n    setTasks([])\n  }\n\n  // Find task\n  const findItem = id => {\n    const item = tasks.find(task => task.id === id)\n\n    setEditItem(item)\n  }\n\n  // Edit task\n  const editTask = (title, id) => {\n    const newTasks = tasks.map(task => (task.id === id ? { title, id } : task))\n\n    console.log(newTasks)\n\n    setTasks(newTasks)\n    setEditItem(null)\n  }\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        clearList,\n        findItem,\n        editTask,\n        editItem\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  )\n}\n\nexport default TaskListContextProvider\n","import React, { useContext } from 'react'\nimport { TaskListContext } from '../contexts/TaskListContext'\n\nconst Task = ({ task }) => {\n  const { removeTask, findItem } = useContext(TaskListContext)\n  return (\n    <li className=\"list-item\">\n      <span>{task.title} </span>\n      <div>\n        <button\n          className=\"btn-delete task-btn\"\n          onClick={() => removeTask(task.id)}\n        >\n          <i className=\"fas fa-trash-alt\"></i>\n        </button>{' '}\n        <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\n          <i className=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default Task\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../contexts/TaskListContext\";\nimport Task from \"./Task\";\n\nconst TaskList = () => {\n  const { tasks } = useContext(TaskListContext);\n\n  return (\n    <div>\n      {tasks.length ? (\n        <ul className=\"list\">\n          {tasks.map(task => {\n            return <Task task={task} key={task.id} />;\n          })}\n        </ul>\n      ) : (\n        <div className=\"no-tasks\">No Tasks</div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React, { useState, useContext, useEffect } from 'react'\nimport { TaskListContext } from '../contexts/TaskListContext'\n\nconst TaskForm = () => {\n  const { addTask, clearList, editTask, editItem } = useContext(TaskListContext)\n  const [title, setTitle] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!editItem) {\n      addTask(title)\n      setTitle('')\n    } else {\n      editTask(title, editItem.id)\n    }\n  }\n\n  const handleChange = e => {\n    setTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title)\n      console.log(editItem)\n    } else {\n      setTitle('')\n    }\n  }, [editItem])\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        type=\"text\"\n        placeholder=\"Add Task...\"\n        value={title}\n        onChange={handleChange}\n        required\n        className=\"task-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"btn add-task-btn\">\n          {editItem ? 'Edit Task' : 'Add Task'}\n        </button>\n        <button className=\"btn clear-btn\" onClick={clearList}>\n          Clear\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default TaskForm\n","import React from 'react'\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <h1>ToDo List</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React from \"react\";\nimport TaskListContextProvider from \"../contexts/TaskListContext\";\nimport TaskList from \"./TaskList\";\nimport TaskForm from \"./TaskForm\";\n\nimport \"../App.css\";\nimport Header from \"./Header\";\n\nconst App = () => {\n  return (\n    <TaskListContextProvider>\n      <div className=\"container\">\n        <div className=\"app-wrapper\">\n          <Header />\n          <div className=\"main\">\n            <TaskForm />\n            <TaskList />\n          </div>\n        </div>\n      </div>\n    </TaskListContextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}